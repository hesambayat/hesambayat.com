{"version":3,"sources":["webpack:///./src/templates/post.js"],"names":["data","console","log","post","prismic","markup","RichText","asText","title","_meta","firstPublicationDate","lastPublicationDate","content","excerpt","uid","className","render","date","query"],"mappings":"6FAAA,8FAKe,sBAAe,IAAZA,EAAW,EAAXA,KAEhB,GADAC,QAAQC,IAAI,kBAAmB,aAAc,iBAAkBF,IAC1DA,EAAM,MAAO,aAFS,IAInBG,EAASH,EAAKI,QAAdD,KACR,OAAKA,EAGH,oCACE,kBAAC,IAAD,CACEE,OAAQ,CACN,QAAS,UACT,SAAYC,WAASC,OAAOJ,EAAKK,OACjC,KAAQF,WAASC,OAAOJ,EAAKK,OAC7B,cAAiBL,EAAKM,MAAMC,qBAC5B,aAAgBP,EAAKM,MAAME,oBAC3B,YAAeL,WAASC,OAAOJ,EAAKS,SACpC,YAAeN,WAASC,OAAOJ,EAAKU,SACpC,IAAM,0BAA2BV,EAAKM,MAAMK,OAEhD,kBAAC,IAAD,MACA,yBAAKC,UAAU,QACb,yBAAKA,UAAU,aACZT,WAASU,OAAOb,EAAKK,OACtB,kBAAC,IAAD,CAAgBS,KAAMd,EAAKM,MAAME,sBAChCL,WAASU,OAAOb,EAAKS,WAG1B,kBAAC,IAAD,MACA,kBAAC,IAAD,OAxBc,cA6Bb,IAAMM,EAAK","file":"component---src-templates-post-js-294646f1553e73ffa7c8.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport { RichText } from 'prismic-reactjs'\nimport * as Component from '../components'\n\nexport default ({ data }) => {\n  console.log('%cDEBUG:%c data', 'color:aqua', 'color:deeppink', data)\n  if (!data) return 'loading...'\n\n  const { post } = data.prismic\n  if (!post) return 'Not found!'\n\n  return (\n    <>\n      <Component.Schema\n        markup={{\n          \"@type\": \"Article\",\n          \"headline\": RichText.asText(post.title),\n          \"name\": RichText.asText(post.title),\n          \"datePublished\": post._meta.firstPublicationDate,\n          \"dateModified\": post._meta.lastPublicationDate,\n          \"articleBody\": RichText.asText(post.content),\n          \"description\": RichText.asText(post.excerpt),\n          \"url\": `https://hesambayat.com/${post._meta.uid}`\n        }} />\n      <Component.HeaderSecondary />\n      <div className=\"post\">\n        <div className=\"container\">\n          {RichText.render(post.title)}\n          <Component.Date date={post._meta.lastPublicationDate} />\n          {RichText.render(post.content)}\n        </div>\n      </div>\n      <Component.Bio />\n      <Component.Footer />\n    </>\n  )\n}\n\nexport const query = graphql`\nquery PageQuery($uid: String!) {\n  prismic {\n    post(lang:\"en-us\", uid: $uid) {\n      title\n      content\n      excerpt\n      _meta {\n        uid\n        tags\n        firstPublicationDate\n        lastPublicationDate\n      }\n    }\n  }\n}`"],"sourceRoot":""}