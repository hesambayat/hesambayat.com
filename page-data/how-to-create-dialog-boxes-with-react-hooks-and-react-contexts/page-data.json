{"componentChunkName":"component---src-templates-post-js","path":"/how-to-create-dialog-boxes-with-react-hooks-and-react-contexts","result":{"data":{"prismic":{"post":{"title":[{"type":"heading1","text":"How to create dialog boxes with React hooks and React contexts","spans":[]}],"has_code":"Yes","excerpt":[{"type":"paragraph","text":"A dialog/modal box is an excellent method to interact with users and elicit a response from them. A dialog box represents critical information on top of the application and regularly used for notifications, alerts, or standalone actions such as subscription forms. ","spans":[]},{"type":"paragraph","text":"Without further ado, Let's jump into it and create a React hook based modal dialog box. We will kick this off by creating an app first, then we add our modal React hook, and finally, we wrap the app by a modal React context so we can show/hide modals from anywhere inside the app...","spans":[]}],"image":{"dimensions":{"width":1200,"height":630},"alt":null,"copyright":null,"url":"https://images.prismic.io/hesambayatcom/7380d9a8-f797-43d1-8fe0-aba51cd35010_photo-1564771492279-99929fb17ef4.jpeg?auto=compress,format&rect=0,137,1952,1025&w=1200&h=630","mobile":{"dimensions":{"width":630,"height":315},"alt":null,"copyright":null,"url":"https://images.prismic.io/hesambayatcom/7380d9a8-f797-43d1-8fe0-aba51cd35010_photo-1564771492279-99929fb17ef4.jpeg?auto=compress,format&rect=0,161,1952,976&w=630&h=315"}},"imageSharp":{"publicURL":"/static/7380d9a8-f797-43d1-8fe0-aba51cd35010_photo-1564771492279-99929fb17ef4-5fc51732e03dab07ee467a940ce74aca.jpeg"},"body":[{"type":"text","label":null,"primary":{"text":[{"type":"paragraph","text":"A dialog/modal box is an excellent method to interact with users and elicit a response from them. A dialog box represents critical information on top of the application and regularly used for notifications, alerts, or standalone actions such as subscription forms. ","spans":[]},{"type":"paragraph","text":"Without further ado, Let's jump into it and create a React hook based modal dialog box. We will kick this off by creating an app first, then we add our modal React hook, and finally, we wrap the app by a modal React context so we can show/hide modals from anywhere inside the app.","spans":[]},{"type":"heading3","text":"Set up your environment","spans":[]},{"type":"paragraph","text":"Youâ€™ll need to have Node >= 8.10 and Yarn >= 0.25 on your local development machine. Let's ensure that you have the right versions installed, by running following command in the Terminal:","spans":[{"start":0,"end":84,"type":"strong"}]},{"type":"preformatted","text":"$ node -v && yarn -v\n# [NODE VERSION]\n# [YARN VERSION]","spans":[]},{"type":"paragraph","text":"You should be able to see your Node version followed by your Yarn's.","spans":[]},{"type":"heading3","text":"Quick start with a new React app","spans":[]},{"type":"paragraph","text":"We are going to take advantage of the \"Create React App\" and install a fresh React app at once. If you already installed the npm `create-react-app` package globally, perhaps you want to uninstall the package or remove it manually as it's not supported anymore, see the reported issue. Let's create a new React app and name it react-modal-app by running:","spans":[{"start":261,"end":283,"type":"hyperlink","data":{"link_type":"Web","url":"https://stackoverflow.com/a/59189242/2131534","target":"_blank"}},{"start":326,"end":341,"type":"strong"}]},{"type":"preformatted","text":"$ yarn create react-app react-modal-app","spans":[]},{"type":"paragraph","text":"See: Get started with React App for more create app methods.","spans":[{"start":0,"end":60,"type":"label","data":{"label":"note"}},{"start":0,"end":4,"type":"strong"},{"start":5,"end":31,"type":"hyperlink","data":{"link_type":"Web","url":"https://create-react-app.dev/docs/getting-started/","target":"_blank"}}]},{"type":"paragraph","text":"Time to run the app","spans":[]},{"type":"preformatted","text":"$ cd react-modal-app","spans":[]},{"type":"preformatted","text":"$ yarn start","spans":[]},{"type":"paragraph","text":"Then open http://localhost:3000/ to see your app. ðŸŽ‰","spans":[{"start":10,"end":32,"type":"hyperlink","data":{"link_type":"Web","url":"http://localhost:3000/","target":"_blank"}}]},{"type":"heading3","text":"Create your modal","spans":[]},{"type":"paragraph","text":"Create the context folder","spans":[]},{"type":"preformatted","text":"$ mkdir src/context","spans":[]},{"type":"paragraph","text":"Create the context files","spans":[]},{"type":"preformatted","text":"$ touch src/context/index.js src/context/modal-context.js","spans":[]},{"type":"paragraph","text":"Your files and folders should look like this:","spans":[]},{"type":"preformatted","text":"react-modal-app/\n| ...\nâ”œâ”€â”€ src/\n|   â”œâ”€â”€ context/\n|   |   | index.js\n|   |   | modal-context.js","spans":[]},{"type":"paragraph","text":"Now we created our context files, Let's code the modal-context.js, firstly by import dependencies:","spans":[]},{"type":"preformatted","text":"import React, { useCallback, useEffect, useState } from'react'","spans":[]},{"type":"paragraph","text":"Create a React context","spans":[]},{"type":"preformatted","text":"const ModalContext = React.createContext()","spans":[]},{"type":"paragraph","text":"Declare the modal component wrapper","spans":[]},{"type":"preformatted","text":"const Modal = () => {}","spans":[]},{"type":"paragraph","text":"Create a context provider","spans":[]},{"type":"preformatted","text":"const ModalProvider = props => {\n  const [modal, setModal] = useState()\n  const unSetModal = useCallback(() => {\n    setModal()\n  }, [setModal])\n\n  return (\n    <ModalContext.Provider value={{ unSetModal, setModal }} {...props} >\n      {props.children}\n      {modal && <Modal modal={modal} unSetModal={unSetModal} />}\n    </ModalContext.Provider>\n  )\n}","spans":[]},{"type":"paragraph","text":"Create a custom hook so we can use it later","spans":[]},{"type":"preformatted","text":"const useModal = () => {\n  const context = React.useContext(ModalContext)\n  if (context === undefined) {\n    throw new Error('useModal must be used within a UserProvider')\n  }\n\n  return context\n}","spans":[]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"export default () => {}","spans":[]},{"type":"paragraph","text":"","spans":[]},{"type":"paragraph","text":"","spans":[]}]}}],"_meta":{"uid":"how-to-create-dialog-boxes-with-react-hooks-and-react-contexts","tags":["ReactJS","React Hooks","React Contexts","Modals","Dialogue Window","React Create App","NodeJS","Yarn"],"firstPublicationDate":"2019-11-28T18:59:00+0000","lastPublicationDate":"2019-12-09T11:52:14+0000"}}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"rootQuery":"\n  query PostQuery($uid: String!) {\n    prismic {\n      post(lang:\"en-us\", uid: $uid) {\n        title\n        has_code\n        excerpt\n        image\n        imageSharp {\n          publicURL\n        }\n        body {\n          ... on PRISMIC_PostBodyImage {\n            type\n            label\n            primary {\n              imageBlock\n              imageBlockSharp {\n                publicURL\n                childImageSharp {\n                  fluid {\n                    ...GatsbyImageSharpFluid_withWebp\n                  }\n                }\n              }\n            }\n          }\n          ... on PRISMIC_PostBodyText {\n            type\n            label\n            primary {\n              text\n            }\n          }\n        }\n        _meta {\n          uid\n          tags\n          firstPublicationDate\n          lastPublicationDate\n        }\n      }\n    }\n  }\n","id":"XeAY7xEAADSwKlk-","lang":"en-us","uid":"how-to-create-dialog-boxes-with-react-hooks-and-react-contexts","alternateLanguages":[]}}}