{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["data","markup","fixed","className","title","label","link","prismic","allThemes","edges","map","item","key","node","_meta","uid","border","allPosts","totalCount","query"],"mappings":"2FAAA,kFAIe,sBAAe,IAAZA,EAAW,EAAXA,KAChB,OAAKA,EAGH,oCACE,kBAAC,IAAD,CACEC,OAAQ,CACN,KAAQ,cACR,YAAe,gCAEnB,kBAAC,IAAD,CAAkBC,OAAK,IACvB,yBAAKC,UAAU,aACb,yBAAKA,UAAU,aAWb,yBAAKA,UAAU,WACb,kBAAC,IAAD,CAAyBC,MAAM,kBAAkBC,MAAM,mBAAmBC,KAAK,YAC/E,yBAAKH,UAAU,OACZH,EAAKO,QAAQC,UAAUC,MAAMC,KAAI,SAAAC,GAChC,OACE,yBAAKC,IAAKD,EAAKE,KAAKC,MAAMC,IAAKZ,UAAU,mBACvC,kBAAC,IAAD,CAAqBQ,KAAMA,UAMrC,yBAAKR,UAAU,WACb,kBAAC,IAAD,CAAyBC,MAAM,YAAYY,QAAM,IACjD,yBAAKb,UAAU,OACZH,EAAKO,QAAQU,SAASR,MAAMC,KAAI,SAAAC,GAE/B,OACE,yBAAKC,IAAKD,EAAKE,KAAKC,MAAMC,IAAKZ,UAAU,mBACvC,kBAAC,IAAD,CAAoBQ,KAAMA,SAKjCX,EAAKO,QAAQU,SAASC,WAAa,GAAK,kBAAC,IAAD,CAAyBb,MAAM,eAAeC,KAAK,aAIlG,kBAAC,IAAD,CAAkBJ,OAAK,KAlDT,MAuDb,IAAMiB,EAAK","file":"component---src-pages-index-js-aa07105157ddcd9754c1.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport * as Component from '../components'\n\nexport default ({ data }) => {\n  if (!data) return null\n\n  return (\n    <>\n      <Component.Schema\n        markup={{\n          \"name\": \"Hesam Bayat\",\n          \"description\": \"TODO: Add page description\",\n        }} />\n      <Component.Header fixed />\n      <div className=\"container\">\n        <div className=\"alignwide\">\n          {/* <div className=\"section\">\n            <Component.Announcement\n              color=\"#1A2AD6\"\n              backgroundColor=\"#EEF2FF\"\n            >\n              <h2>Now hiring!!!</h2>\n              <p>Front end developer <br />Graphic designer <br />Content writer <br />and more...</p>\n              <a href=\"https://staff.am/en/jobs?JobsFilter%5Bcompany%5D=5357\" className=\"btn\" target=\"_blank\" rel=\"noopener noreferrer\">Apply now</a>\n            </Component.Announcement>\n          </div> */}\n          <div className=\"section\">\n            <Component.SectionHeader title=\"Featured themes\" label=\"View more themes\" link=\"/themes\" />\n            <div className=\"row\">\n              {data.prismic.allThemes.edges.map(item => {\n                return (\n                  <div key={item.node._meta.uid} className=\"col-12 col-lg-6\">\n                    <Component.ThemeCard item={item} />\n                  </div>\n                )\n              })}\n            </div>\n          </div>\n          <div className=\"section\">\n            <Component.SectionHeader title=\"From blog\" border />\n            <div className=\"row\">\n              {data.prismic.allPosts.edges.map(item => {\n                // console.log(item)\n                return (\n                  <div key={item.node._meta.uid} className=\"col-12 col-lg-6\">\n                    <Component.PostCard item={item} />\n                  </div>\n                )\n              })}\n            </div>\n            {data.prismic.allPosts.totalCount > 6 && <Component.SectionFooter label=\"View archive\" link=\"/more\" />}\n          </div>\n        </div>\n      </div>\n      <Component.Footer fixed />\n    </>\n  )\n}\n\nexport const query = graphql`\n  query HomeQuery {\n    prismic {\n      allThemes (tags_in: \"Featured\", sortBy: meta_lastPublicationDate_DESC) {\n        totalCount\n        edges {\n          node {\n            name\n            title\n            price\n            discounted_price\n            demo_url {\n              ... on PRISMIC__ExternalLink{\n                url\n              }\n            }\n            buy_url {\n              ... on PRISMIC__ExternalLink{\n                url\n              }\n            }\n            image\n            imageSharp {\n              childImageSharp {\n                fixed(width: 500, height: 239) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n            _meta {\n              lastPublicationDate\n              uid\n            }\n          }\n        }\n      }\n      allPosts {\n        totalCount\n        edges {\n          node {\n            title\n            image\n            imageSharp {\n              childImageSharp {\n                fixed(width: 120, height: 120) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n            _meta {\n              lastPublicationDate\n              uid\n            }\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}